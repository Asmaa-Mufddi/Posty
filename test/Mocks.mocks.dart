// Mocks generated by Mockito 5.4.6 from annotations
// in posty/test/Mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:posty/features/HomePosts/data/model/Comment_Model/comment_model.dart'
    as _i6;
import 'package:posty/features/HomePosts/data/model/Post_Model/post_model.dart'
    as _i2;
import 'package:posty/features/HomePosts/data/model/User_Model/user_model.dart'
    as _i3;
import 'package:posty/features/HomePosts/domain/posts_abstract_repo.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostModel_0 extends _i1.SmartFake implements _i2.PostModel {
  _FakePostModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PostsAbstractRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsAbstractRepository extends _i1.Mock
    implements _i4.PostsAbstractRepository {
  MockPostsAbstractRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.PostModel>> getPosts() =>
      (super.noSuchMethod(
            Invocation.method(#getPosts, []),
            returnValue: _i5.Future<List<_i2.PostModel>>.value(
              <_i2.PostModel>[],
            ),
          )
          as _i5.Future<List<_i2.PostModel>>);

  @override
  _i5.Future<_i2.PostModel> getPostById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPostById, [id]),
            returnValue: _i5.Future<_i2.PostModel>.value(
              _FakePostModel_0(this, Invocation.method(#getPostById, [id])),
            ),
          )
          as _i5.Future<_i2.PostModel>);

  @override
  _i5.Future<List<_i6.CommentModel>> getCommentsForPost(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#getCommentsForPost, [postId]),
            returnValue: _i5.Future<List<_i6.CommentModel>>.value(
              <_i6.CommentModel>[],
            ),
          )
          as _i5.Future<List<_i6.CommentModel>>);

  @override
  _i5.Future<_i3.UserModel> getUserById(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [userId]),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(this, Invocation.method(#getUserById, [userId])),
            ),
          )
          as _i5.Future<_i3.UserModel>);
}
